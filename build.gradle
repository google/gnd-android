/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file. Configuration specified here is inherited by all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
        maven { url "https://maven.google.com" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://github.com/ben-manes/gradle-versions-plugin/raw/mvnrepo" }
    }
    dependencies {
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0"
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "com.google.gms:google-services:4.3.3"
        classpath "com.pascalwelsch.gitversioner:gitversioner:0.5.0"

        // Performance Monitoring plugin: https://firebase.google.com/docs/perf-mon
        classpath 'com.google.firebase:perf-plugin:1.3.1'

        // Crashlytics plugin
        classpath 'io.fabric.tools:gradle:1.31.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.28.0"
    id 'com.github.spotbugs' version '1.6.4'
}

allprojects {

    repositories {
        google() // For github repos.
        mavenLocal()
        maven { url "https://maven.google.com" }
        maven { url "https://jitpack.io" }
        jcenter()
    }
}

task checkCode(type: GradleBuild) {
    tasks = ['checkstyle', 'lintDebug', 'pmd', 'spotbugs', 'dependencyUpdates']
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// https://github.com/passsy/gradle-gitVersioner-plugin
apply plugin: "com.pascalwelsch.gitversioner"
gitVersioner {
    baseBranch "master"
}

// To check which dependencies are out of date:
// ./gradlew dependencyUpdates
tasks.dependencyUpdates {
    checkConstraints = true
    gradleReleaseChannel = "current"
    outputFormatter = "json,plain"
    outputDir = "gnd/build/reports/dependencyUpdates"
}